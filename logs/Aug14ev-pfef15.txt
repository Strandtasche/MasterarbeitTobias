INFO:root:Tensorflow 1.8.0
INFO:root:time: 2018-08-24_16.07.13
INFO:root:Saving to /home/hornberger/MasterarbeitTobias/models/Aug14ev/pfef15
INFO:root:/home/hornberger/MasterarbeitTobias/models/Aug14ev/pfef15 does not exist. Creating folder
INFO:root:loading data from store
INFO:root:Train the DNN Regressor...

INFO:root:Progress: epoch 0
INFO:root:eval: {'average_loss': 1191.0812, 'loss': 1179289.5, 'global_step': 500}
INFO:root:Progress: epoch 10
INFO:root:eval: {'average_loss': 69.51849, 'loss': 68830.266, 'global_step': 5500}
INFO:root:Progress: epoch 20
INFO:root:eval: {'average_loss': 45.11841, 'loss': 44671.734, 'global_step': 10500}
INFO:root:Progress: epoch 30
INFO:root:eval: {'average_loss': 10.996689, 'loss': 10887.822, 'global_step': 15500}
INFO:root:Progress: epoch 40
INFO:root:eval: {'average_loss': 4.9301753, 'loss': 4881.366, 'global_step': 20500}
INFO:root:Progress: epoch 50
INFO:root:eval: {'average_loss': 4.8029904, 'loss': 4755.441, 'global_step': 25500}
INFO:root:Progress: epoch 60
INFO:root:eval: {'average_loss': 6.543118, 'loss': 6478.341, 'global_step': 30500}
INFO:root:Progress: epoch 70
INFO:root:eval: {'average_loss': 5.2286544, 'loss': 5176.8906, 'global_step': 35500}
INFO:root:Progress: epoch 80
INFO:root:eval: {'average_loss': 4.75804, 'loss': 4710.935, 'global_step': 40500}
INFO:root:Progress: epoch 90
INFO:root:eval: {'average_loss': 5.397144, 'loss': 5343.712, 'global_step': 45500}
INFO:root:Progress: epoch 100
INFO:root:eval: {'average_loss': 4.704892, 'loss': 4658.3135, 'global_step': 50500}
INFO:root:Progress: epoch 110
INFO:root:eval: {'average_loss': 4.017359, 'loss': 3977.5867, 'global_step': 55500}
INFO:root:Progress: epoch 120
INFO:root:eval: {'average_loss': 3.9116874, 'loss': 3872.9617, 'global_step': 60500}
INFO:root:Progress: epoch 130
INFO:root:eval: {'average_loss': 7.3653965, 'loss': 7292.479, 'global_step': 65500}
INFO:root:Progress: epoch 140
INFO:root:eval: {'average_loss': 5.37473, 'loss': 5321.5205, 'global_step': 70500}
INFO:root:Progress: epoch 150
INFO:root:eval: {'average_loss': 3.6927245, 'loss': 3656.1665, 'global_step': 75500}
INFO:root:Progress: epoch 160
INFO:root:eval: {'average_loss': 3.8331056, 'loss': 3795.1577, 'global_step': 80500}
INFO:root:Progress: epoch 170
INFO:root:eval: {'average_loss': 4.07885, 'loss': 4038.4692, 'global_step': 85500}
INFO:root:Progress: epoch 180
INFO:root:eval: {'average_loss': 3.6108897, 'loss': 3575.1418, 'global_step': 90500}
INFO:root:Progress: epoch 190
INFO:root:eval: {'average_loss': 5.6997523, 'loss': 5643.3247, 'global_step': 95500}
INFO:root:Progress: epoch 200
INFO:root:eval: {'average_loss': 6.1269016, 'loss': 6066.245, 'global_step': 100500}
INFO:root:Progress: epoch 210
INFO:root:eval: {'average_loss': 4.1170135, 'loss': 4076.2551, 'global_step': 105500}
INFO:root:Progress: epoch 220
INFO:root:eval: {'average_loss': 4.089429, 'loss': 4048.9434, 'global_step': 110500}
INFO:root:Progress: epoch 230
INFO:root:eval: {'average_loss': 6.1453815, 'loss': 6084.542, 'global_step': 115500}
INFO:root:Progress: epoch 240
INFO:root:eval: {'average_loss': 6.3583746, 'loss': 6295.427, 'global_step': 120500}
INFO:root:Progress: epoch 250
INFO:root:eval: {'average_loss': 4.596593, 'loss': 4551.087, 'global_step': 125500}
INFO:root:Progress: epoch 260
INFO:root:eval: {'average_loss': 6.738424, 'loss': 6671.7134, 'global_step': 130500}
INFO:root:Progress: epoch 270
INFO:root:eval: {'average_loss': 8.980006, 'loss': 8891.104, 'global_step': 135500}
INFO:root:Progress: epoch 280
INFO:root:eval: {'average_loss': 8.608712, 'loss': 8523.486, 'global_step': 140500}
INFO:root:Progress: epoch 290
INFO:root:eval: {'average_loss': 4.6255527, 'loss': 4579.76, 'global_step': 145500}
INFO:root:Progress: epoch 300
INFO:root:eval: {'average_loss': 3.618107, 'loss': 3582.2878, 'global_step': 150500}
INFO:root:Progress: epoch 310
INFO:root:eval: {'average_loss': 4.2545753, 'loss': 4212.455, 'global_step': 155500}
INFO:root:Progress: epoch 320
INFO:root:eval: {'average_loss': 5.9511466, 'loss': 5892.2305, 'global_step': 160500}
INFO:root:Progress: epoch 330
INFO:root:eval: {'average_loss': 3.2203217, 'loss': 3188.4404, 'global_step': 165500}
INFO:root:Progress: epoch 340
INFO:root:eval: {'average_loss': 9.953337, 'loss': 9854.799, 'global_step': 170500}
INFO:root:Progress: epoch 350
INFO:root:eval: {'average_loss': 5.26138, 'loss': 5209.2925, 'global_step': 175500}
INFO:root:Progress: epoch 360
INFO:root:eval: {'average_loss': 6.8566275, 'loss': 6788.747, 'global_step': 180500}
INFO:root:Progress: epoch 370
INFO:root:eval: {'average_loss': 5.066956, 'loss': 5016.793, 'global_step': 185500}
INFO:root:Progress: epoch 380
INFO:root:eval: {'average_loss': 3.6206882, 'loss': 3584.8433, 'global_step': 190500}
INFO:root:Progress: epoch 390
INFO:root:eval: {'average_loss': 3.7882442, 'loss': 3750.7407, 'global_step': 195500}
INFO:root:Progress: epoch 400
INFO:root:eval: {'average_loss': 4.554952, 'loss': 4509.8584, 'global_step': 200500}
INFO:root:Progress: epoch 410
INFO:root:eval: {'average_loss': 3.738938, 'loss': 3701.9226, 'global_step': 205500}
INFO:root:Progress: epoch 420
INFO:root:eval: {'average_loss': 3.3686464, 'loss': 3335.2969, 'global_step': 210500}
INFO:root:Progress: epoch 430
INFO:root:eval: {'average_loss': 3.363788, 'loss': 3330.4863, 'global_step': 215500}
INFO:root:Progress: epoch 440
INFO:root:eval: {'average_loss': 3.9151742, 'loss': 3876.414, 'global_step': 220500}
INFO:root:Progress: epoch 450
INFO:root:eval: {'average_loss': 10.448627, 'loss': 10345.186, 'global_step': 225500}
INFO:root:Progress: epoch 460
INFO:root:eval: {'average_loss': 3.8736587, 'loss': 3835.3093, 'global_step': 230500}
INFO:root:Progress: epoch 470
INFO:root:eval: {'average_loss': 3.963267, 'loss': 3924.0308, 'global_step': 235500}
INFO:root:Progress: epoch 480
INFO:root:eval: {'average_loss': 6.878162, 'loss': 6810.068, 'global_step': 240500}
INFO:root:Progress: epoch 490
INFO:root:eval: {'average_loss': 6.2932997, 'loss': 6230.996, 'global_step': 245500}
(89105, 10) (89105, 2)
(9901, 10) (9901, 2)
INFO:root:Tensorflow 1.8.0
INFO:root:time: 2018-08-24_17.19.47
INFO:root:Saving to /home/hornberger/MasterarbeitTobias/models/Aug14ev/pfef15
Traceback (most recent call last):
  File "DNNRegressor-Example.py", line 410, in <module>
    tf.app.run(main)
  File "/home/hornberger/.virtualenvs/gpu-tensorflow/lib/python3.6/site-packages/tensorflow/python/platform/app.py", line 126, in run
    _sys.exit(main(argv))
  File "DNNRegressor-Example.py", line 208, in main
    decay_rate=0.96)),
  File "/home/hornberger/.virtualenvs/gpu-tensorflow/lib/python3.6/site-packages/tensorflow/python/training/learning_rate_decay.py", line 92, in exponential_decay
    raise ValueError("global_step is required for exponential_decay.")
ValueError: global_step is required for exponential_decay.
INFO:root:Tensorflow 1.8.0
INFO:root:time: 2018-08-24_17.40.25
INFO:root:Saving to /home/hornberger/MasterarbeitTobias/models/Aug14ev/pfef15
INFO:root:/home/hornberger/MasterarbeitTobias/models/Aug14ev/pfef15 does not exist. Creating folder
INFO:root:loading data from store
INFO:root:Train the DNN Regressor...

(89105, 10) (89105, 2)
(9901, 10) (9901, 2)
Traceback (most recent call last):
  File "DNNRegressor-Example.py", line 413, in <module>
    tf.app.run(main)
  File "/home/hornberger/.virtualenvs/gpu-tensorflow/lib/python3.6/site-packages/tensorflow/python/platform/app.py", line 126, in run
    _sys.exit(main(argv))
  File "DNNRegressor-Example.py", line 308, in main
    steps=STEPS_PER_EPOCH, hooks=hooks)
  File "/home/hornberger/.virtualenvs/gpu-tensorflow/lib/python3.6/site-packages/tensorflow/python/estimator/estimator.py", line 363, in train
    loss = self._train_model(input_fn, hooks, saving_listeners)
  File "/home/hornberger/.virtualenvs/gpu-tensorflow/lib/python3.6/site-packages/tensorflow/python/estimator/estimator.py", line 843, in _train_model
    return self._train_model_default(input_fn, hooks, saving_listeners)
  File "/home/hornberger/.virtualenvs/gpu-tensorflow/lib/python3.6/site-packages/tensorflow/python/estimator/estimator.py", line 856, in _train_model_default
    features, labels, model_fn_lib.ModeKeys.TRAIN, self.config)
  File "/home/hornberger/.virtualenvs/gpu-tensorflow/lib/python3.6/site-packages/tensorflow/python/estimator/estimator.py", line 831, in _call_model_fn
    model_fn_results = self._model_fn(features=features, **kwargs)
  File "/home/hornberger/.virtualenvs/gpu-tensorflow/lib/python3.6/site-packages/tensorflow/python/estimator/canned/dnn.py", line 494, in _model_fn
    config=config)
  File "/home/hornberger/.virtualenvs/gpu-tensorflow/lib/python3.6/site-packages/tensorflow/python/estimator/canned/dnn.py", line 190, in _dnn_model_fn
    logits=logits)
  File "/home/hornberger/.virtualenvs/gpu-tensorflow/lib/python3.6/site-packages/tensorflow/python/estimator/canned/head.py", line 1416, in create_estimator_spec
    global_step=training_util.get_global_step())
  File "/home/hornberger/.virtualenvs/gpu-tensorflow/lib/python3.6/site-packages/tensorflow/python/training/optimizer.py", line 424, in minimize
    name=name)
  File "/home/hornberger/.virtualenvs/gpu-tensorflow/lib/python3.6/site-packages/tensorflow/python/training/optimizer.py", line 617, in apply_gradients
    update_ops.append(processor.update_op(self, grad))
  File "/home/hornberger/.virtualenvs/gpu-tensorflow/lib/python3.6/site-packages/tensorflow/python/training/optimizer.py", line 113, in update_op
    update_op = optimizer._apply_dense(g, self._v)  # pylint: disable=protected-access
  File "/home/hornberger/.virtualenvs/gpu-tensorflow/lib/python3.6/site-packages/tensorflow/python/training/adam.py", line 152, in _apply_dense
    grad, use_locking=self._use_locking).op
  File "/home/hornberger/.virtualenvs/gpu-tensorflow/lib/python3.6/site-packages/tensorflow/python/training/gen_training_ops.py", line 230, in apply_adam
    use_nesterov=use_nesterov, name=name)
  File "/home/hornberger/.virtualenvs/gpu-tensorflow/lib/python3.6/site-packages/tensorflow/python/framework/op_def_library.py", line 350, in _apply_op_helper
    g = ops._get_graph_from_inputs(_Flatten(keywords.values()))
  File "/home/hornberger/.virtualenvs/gpu-tensorflow/lib/python3.6/site-packages/tensorflow/python/framework/ops.py", line 5637, in _get_graph_from_inputs
    _assert_same_graph(original_graph_element, graph_element)
  File "/home/hornberger/.virtualenvs/gpu-tensorflow/lib/python3.6/site-packages/tensorflow/python/framework/ops.py", line 5573, in _assert_same_graph
    original_item))
ValueError: Tensor("ExponentialDecay:0", shape=(), dtype=float32) must be from the same graph as Tensor("dnn/hiddenlayer_0/kernel/part_0:0", shape=(10, 16), dtype=float32_ref).
