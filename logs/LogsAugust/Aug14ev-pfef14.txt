INFO:root:Tensorflow 1.8.0
INFO:root:time: 2018-08-24_15.35.10
INFO:root:Saving to /home/hornberger/MasterarbeitTobias/models/Aug14ev/pfef14
INFO:root:/home/hornberger/MasterarbeitTobias/models/Aug14ev/pfef14 does not exist. Creating folder
INFO:root:loading data from store
INFO:root:Train the DNN Regressor...

INFO:root:Progress: epoch 0
INFO:root:eval: {'average_loss': 1147.8862, 'loss': 1136522.1, 'global_step': 500}
INFO:root:Progress: epoch 10
INFO:root:eval: {'average_loss': 49.516804, 'loss': 49026.586, 'global_step': 5500}
INFO:root:Progress: epoch 20
INFO:root:eval: {'average_loss': 4.9989014, 'loss': 4949.412, 'global_step': 10500}
INFO:root:Progress: epoch 30
INFO:root:eval: {'average_loss': 12.463173, 'loss': 12339.787, 'global_step': 15500}
INFO:root:Progress: epoch 40
INFO:root:eval: {'average_loss': 5.049356, 'loss': 4999.3677, 'global_step': 20500}
INFO:root:Progress: epoch 50
INFO:root:eval: {'average_loss': 3.7570558, 'loss': 3719.8608, 'global_step': 25500}
INFO:root:Progress: epoch 60
INFO:root:eval: {'average_loss': 7.419588, 'loss': 7346.1343, 'global_step': 30500}
INFO:root:Progress: epoch 70
INFO:root:eval: {'average_loss': 8.578804, 'loss': 8493.873, 'global_step': 35500}
INFO:root:Progress: epoch 80
INFO:root:eval: {'average_loss': 7.901413, 'loss': 7823.189, 'global_step': 40500}
INFO:root:Progress: epoch 90
INFO:root:eval: {'average_loss': 4.063605, 'loss': 4023.375, 'global_step': 45500}
INFO:root:Progress: epoch 100
INFO:root:eval: {'average_loss': 11.102197, 'loss': 10992.285, 'global_step': 50500}
INFO:root:Progress: epoch 110
INFO:root:eval: {'average_loss': 13.268196, 'loss': 13136.841, 'global_step': 55500}
INFO:root:Progress: epoch 120
INFO:root:eval: {'average_loss': 6.225899, 'loss': 6164.2627, 'global_step': 60500}
INFO:root:Progress: epoch 130
INFO:root:eval: {'average_loss': 4.1117334, 'loss': 4071.0273, 'global_step': 65500}
INFO:root:Progress: epoch 140
INFO:root:eval: {'average_loss': 8.157912, 'loss': 8077.1494, 'global_step': 70500}
INFO:root:Progress: epoch 150
INFO:root:eval: {'average_loss': 6.068773, 'loss': 6008.692, 'global_step': 75500}
INFO:root:Progress: epoch 160
INFO:root:eval: {'average_loss': 3.9230216, 'loss': 3884.1836, 'global_step': 80500}
INFO:root:Progress: epoch 170
INFO:root:eval: {'average_loss': 7.1559477, 'loss': 7085.104, 'global_step': 85500}
INFO:root:Progress: epoch 180
INFO:root:eval: {'average_loss': 11.434436, 'loss': 11321.235, 'global_step': 90500}
INFO:root:Progress: epoch 190
INFO:root:eval: {'average_loss': 5.9890575, 'loss': 5929.766, 'global_step': 95500}
INFO:root:Progress: epoch 200
INFO:root:eval: {'average_loss': 5.4725175, 'loss': 5418.3394, 'global_step': 100500}
INFO:root:Progress: epoch 210
INFO:root:eval: {'average_loss': 5.3388295, 'loss': 5285.975, 'global_step': 105500}
INFO:root:Progress: epoch 220
INFO:root:eval: {'average_loss': 4.776851, 'loss': 4729.5605, 'global_step': 110500}
INFO:root:Progress: epoch 230
INFO:root:eval: {'average_loss': 6.131625, 'loss': 6070.922, 'global_step': 115500}
INFO:root:Progress: epoch 240
INFO:root:eval: {'average_loss': 5.969768, 'loss': 5910.6675, 'global_step': 120500}
INFO:root:Progress: epoch 250
INFO:root:eval: {'average_loss': 6.2130876, 'loss': 6151.578, 'global_step': 125500}
INFO:root:Progress: epoch 260
INFO:root:eval: {'average_loss': 6.743024, 'loss': 6676.268, 'global_step': 130500}
INFO:root:Progress: epoch 270
INFO:root:eval: {'average_loss': 9.228124, 'loss': 9136.765, 'global_step': 135500}
INFO:root:Progress: epoch 280
INFO:root:eval: {'average_loss': 9.7402935, 'loss': 9643.865, 'global_step': 140500}
INFO:root:Progress: epoch 290
INFO:root:eval: {'average_loss': 3.800105, 'loss': 3762.484, 'global_step': 145500}
INFO:root:Progress: epoch 300
INFO:root:eval: {'average_loss': 10.241521, 'loss': 10140.13, 'global_step': 150500}
INFO:root:Progress: epoch 310
INFO:root:eval: {'average_loss': 6.605322, 'loss': 6539.929, 'global_step': 155500}
INFO:root:Progress: epoch 320
INFO:root:eval: {'average_loss': 4.8038, 'loss': 4756.2427, 'global_step': 160500}
INFO:root:Progress: epoch 330
INFO:root:eval: {'average_loss': 3.052092, 'loss': 3021.8765, 'global_step': 165500}
INFO:root:Progress: epoch 340
INFO:root:eval: {'average_loss': 3.991692, 'loss': 3952.1743, 'global_step': 170500}
INFO:root:Progress: epoch 350
INFO:root:eval: {'average_loss': 4.78381, 'loss': 4736.45, 'global_step': 175500}
INFO:root:Progress: epoch 360
INFO:root:eval: {'average_loss': 4.094009, 'loss': 4053.478, 'global_step': 180500}
INFO:root:Progress: epoch 370
INFO:root:eval: {'average_loss': 4.387139, 'loss': 4343.706, 'global_step': 185500}
INFO:root:Progress: epoch 380
INFO:root:eval: {'average_loss': 3.8292813, 'loss': 3791.3716, 'global_step': 190500}
INFO:root:Progress: epoch 390
INFO:root:eval: {'average_loss': 8.282088, 'loss': 8200.096, 'global_step': 195500}
INFO:root:Progress: epoch 400
INFO:root:eval: {'average_loss': 3.2364545, 'loss': 3204.4136, 'global_step': 200500}
INFO:root:Progress: epoch 410
INFO:root:eval: {'average_loss': 3.927645, 'loss': 3888.7612, 'global_step': 205500}
INFO:root:Progress: epoch 420
INFO:root:eval: {'average_loss': 3.244338, 'loss': 3212.2192, 'global_step': 210500}
INFO:root:Progress: epoch 430
INFO:root:eval: {'average_loss': 2.954395, 'loss': 2925.1465, 'global_step': 215500}
INFO:root:Progress: epoch 440
INFO:root:eval: {'average_loss': 5.919067, 'loss': 5860.468, 'global_step': 220500}
INFO:root:Progress: epoch 450
INFO:root:eval: {'average_loss': 3.316628, 'loss': 3283.7935, 'global_step': 225500}
INFO:root:Progress: epoch 460
INFO:root:eval: {'average_loss': 6.8747025, 'loss': 6806.643, 'global_step': 230500}
INFO:root:Progress: epoch 470
INFO:root:eval: {'average_loss': 5.602933, 'loss': 5547.464, 'global_step': 235500}
INFO:root:Progress: epoch 480
INFO:root:eval: {'average_loss': 5.051148, 'loss': 5001.1416, 'global_step': 240500}
INFO:root:Progress: epoch 490
INFO:root:eval: {'average_loss': 3.4263237, 'loss': 3392.403, 'global_step': 245500}
(89105, 10) (89105, 2)
(9901, 10) (9901, 2)
INFO:root:Tensorflow 1.8.0
INFO:root:time: 2018-08-24_17.19.46
INFO:root:Saving to /home/hornberger/MasterarbeitTobias/models/Aug14ev/pfef14
Traceback (most recent call last):
  File "DNNRegressor-Example.py", line 410, in <module>
    tf.app.run(main)
  File "/home/hornberger/.virtualenvs/gpu-tensorflow/lib/python3.6/site-packages/tensorflow/python/platform/app.py", line 126, in run
    _sys.exit(main(argv))
  File "DNNRegressor-Example.py", line 208, in main
    decay_rate=0.96)),
  File "/home/hornberger/.virtualenvs/gpu-tensorflow/lib/python3.6/site-packages/tensorflow/python/training/learning_rate_decay.py", line 92, in exponential_decay
    raise ValueError("global_step is required for exponential_decay.")
ValueError: global_step is required for exponential_decay.
INFO:root:Tensorflow 1.8.0
INFO:root:time: 2018-08-24_17.40.24
INFO:root:Saving to /home/hornberger/MasterarbeitTobias/models/Aug14ev/pfef14
INFO:root:/home/hornberger/MasterarbeitTobias/models/Aug14ev/pfef14 does not exist. Creating folder
INFO:root:loading data from store
INFO:root:Train the DNN Regressor...

(89105, 10) (89105, 2)
(9901, 10) (9901, 2)
Traceback (most recent call last):
  File "DNNRegressor-Example.py", line 413, in <module>
    tf.app.run(main)
  File "/home/hornberger/.virtualenvs/gpu-tensorflow/lib/python3.6/site-packages/tensorflow/python/platform/app.py", line 126, in run
    _sys.exit(main(argv))
  File "DNNRegressor-Example.py", line 308, in main
    steps=STEPS_PER_EPOCH, hooks=hooks)
  File "/home/hornberger/.virtualenvs/gpu-tensorflow/lib/python3.6/site-packages/tensorflow/python/estimator/estimator.py", line 363, in train
    loss = self._train_model(input_fn, hooks, saving_listeners)
  File "/home/hornberger/.virtualenvs/gpu-tensorflow/lib/python3.6/site-packages/tensorflow/python/estimator/estimator.py", line 843, in _train_model
    return self._train_model_default(input_fn, hooks, saving_listeners)
  File "/home/hornberger/.virtualenvs/gpu-tensorflow/lib/python3.6/site-packages/tensorflow/python/estimator/estimator.py", line 856, in _train_model_default
    features, labels, model_fn_lib.ModeKeys.TRAIN, self.config)
  File "/home/hornberger/.virtualenvs/gpu-tensorflow/lib/python3.6/site-packages/tensorflow/python/estimator/estimator.py", line 831, in _call_model_fn
    model_fn_results = self._model_fn(features=features, **kwargs)
  File "/home/hornberger/.virtualenvs/gpu-tensorflow/lib/python3.6/site-packages/tensorflow/python/estimator/canned/dnn.py", line 494, in _model_fn
    config=config)
  File "/home/hornberger/.virtualenvs/gpu-tensorflow/lib/python3.6/site-packages/tensorflow/python/estimator/canned/dnn.py", line 190, in _dnn_model_fn
    logits=logits)
  File "/home/hornberger/.virtualenvs/gpu-tensorflow/lib/python3.6/site-packages/tensorflow/python/estimator/canned/head.py", line 1416, in create_estimator_spec
    global_step=training_util.get_global_step())
  File "/home/hornberger/.virtualenvs/gpu-tensorflow/lib/python3.6/site-packages/tensorflow/python/training/optimizer.py", line 424, in minimize
    name=name)
  File "/home/hornberger/.virtualenvs/gpu-tensorflow/lib/python3.6/site-packages/tensorflow/python/training/optimizer.py", line 617, in apply_gradients
    update_ops.append(processor.update_op(self, grad))
  File "/home/hornberger/.virtualenvs/gpu-tensorflow/lib/python3.6/site-packages/tensorflow/python/training/optimizer.py", line 113, in update_op
    update_op = optimizer._apply_dense(g, self._v)  # pylint: disable=protected-access
  File "/home/hornberger/.virtualenvs/gpu-tensorflow/lib/python3.6/site-packages/tensorflow/python/training/adam.py", line 152, in _apply_dense
    grad, use_locking=self._use_locking).op
  File "/home/hornberger/.virtualenvs/gpu-tensorflow/lib/python3.6/site-packages/tensorflow/python/training/gen_training_ops.py", line 230, in apply_adam
    use_nesterov=use_nesterov, name=name)
  File "/home/hornberger/.virtualenvs/gpu-tensorflow/lib/python3.6/site-packages/tensorflow/python/framework/op_def_library.py", line 350, in _apply_op_helper
    g = ops._get_graph_from_inputs(_Flatten(keywords.values()))
  File "/home/hornberger/.virtualenvs/gpu-tensorflow/lib/python3.6/site-packages/tensorflow/python/framework/ops.py", line 5637, in _get_graph_from_inputs
    _assert_same_graph(original_graph_element, graph_element)
  File "/home/hornberger/.virtualenvs/gpu-tensorflow/lib/python3.6/site-packages/tensorflow/python/framework/ops.py", line 5573, in _assert_same_graph
    original_item))
ValueError: Tensor("ExponentialDecay:0", shape=(), dtype=float32) must be from the same graph as Tensor("dnn/hiddenlayer_0/kernel/part_0:0", shape=(10, 16), dtype=float32_ref).
