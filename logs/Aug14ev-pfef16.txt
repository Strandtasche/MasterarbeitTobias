INFO:root:Tensorflow 1.8.0
INFO:root:time: 2018-08-24_16.39.29
INFO:root:Saving to /home/hornberger/MasterarbeitTobias/models/Aug14ev/pfef16
INFO:root:/home/hornberger/MasterarbeitTobias/models/Aug14ev/pfef16 does not exist. Creating folder
INFO:root:loading data from store
INFO:root:Train the DNN Regressor...

INFO:root:Progress: epoch 0
INFO:root:eval: {'average_loss': 447.40158, 'loss': 442972.3, 'global_step': 500}
INFO:root:Progress: epoch 10
INFO:root:eval: {'average_loss': 37.20026, 'loss': 36831.977, 'global_step': 5500}
INFO:root:Progress: epoch 20
INFO:root:eval: {'average_loss': 10.797351, 'loss': 10690.457, 'global_step': 10500}
INFO:root:Progress: epoch 30
INFO:root:eval: {'average_loss': 8.630319, 'loss': 8544.879, 'global_step': 15500}
INFO:root:Progress: epoch 40
INFO:root:eval: {'average_loss': 28.089098, 'loss': 27811.016, 'global_step': 20500}
INFO:root:Progress: epoch 50
INFO:root:eval: {'average_loss': 6.4025745, 'loss': 6339.189, 'global_step': 25500}
INFO:root:Progress: epoch 60
INFO:root:eval: {'average_loss': 9.4779, 'loss': 9384.068, 'global_step': 30500}
INFO:root:Progress: epoch 70
INFO:root:eval: {'average_loss': 4.455518, 'loss': 4411.408, 'global_step': 35500}
INFO:root:Progress: epoch 80
INFO:root:eval: {'average_loss': 6.620458, 'loss': 6554.9155, 'global_step': 40500}
INFO:root:Progress: epoch 90
INFO:root:eval: {'average_loss': 8.070024, 'loss': 7990.1304, 'global_step': 45500}
INFO:root:Progress: epoch 100
INFO:root:eval: {'average_loss': 3.695089, 'loss': 3658.5078, 'global_step': 50500}
INFO:root:Progress: epoch 110
INFO:root:eval: {'average_loss': 13.141138, 'loss': 13011.041, 'global_step': 55500}
INFO:root:Progress: epoch 120
INFO:root:eval: {'average_loss': 8.582989, 'loss': 8498.018, 'global_step': 60500}
INFO:root:Progress: epoch 130
INFO:root:eval: {'average_loss': 8.726018, 'loss': 8639.631, 'global_step': 65500}
INFO:root:Progress: epoch 140
INFO:root:eval: {'average_loss': 4.506009, 'loss': 4461.3994, 'global_step': 70500}
INFO:root:Progress: epoch 150
INFO:root:eval: {'average_loss': 7.890672, 'loss': 7812.5547, 'global_step': 75500}
INFO:root:Progress: epoch 160
INFO:root:eval: {'average_loss': 5.3174562, 'loss': 5264.8135, 'global_step': 80500}
INFO:root:Progress: epoch 170
INFO:root:eval: {'average_loss': 3.8300045, 'loss': 3792.0874, 'global_step': 85500}
INFO:root:Progress: epoch 180
INFO:root:eval: {'average_loss': 4.9716663, 'loss': 4922.447, 'global_step': 90500}
INFO:root:Progress: epoch 190
INFO:root:eval: {'average_loss': 3.3457594, 'loss': 3312.6362, 'global_step': 95500}
INFO:root:Progress: epoch 200
INFO:root:eval: {'average_loss': 6.302611, 'loss': 6240.215, 'global_step': 100500}
INFO:root:Progress: epoch 210
INFO:root:eval: {'average_loss': 4.037268, 'loss': 3997.2993, 'global_step': 105500}
INFO:root:Progress: epoch 220
INFO:root:eval: {'average_loss': 3.142862, 'loss': 3111.7478, 'global_step': 110500}
INFO:root:Progress: epoch 230
INFO:root:eval: {'average_loss': 14.343111, 'loss': 14201.114, 'global_step': 115500}
INFO:root:Progress: epoch 240
INFO:root:eval: {'average_loss': 2.9987042, 'loss': 2969.017, 'global_step': 120500}
INFO:root:Progress: epoch 250
INFO:root:eval: {'average_loss': 4.2702255, 'loss': 4227.95, 'global_step': 125500}
INFO:root:Progress: epoch 260
INFO:root:eval: {'average_loss': 3.7270813, 'loss': 3690.183, 'global_step': 130500}
INFO:root:Progress: epoch 270
INFO:root:eval: {'average_loss': 5.232742, 'loss': 5180.938, 'global_step': 135500}
INFO:root:Progress: epoch 280
INFO:root:eval: {'average_loss': 3.0252576, 'loss': 2995.3076, 'global_step': 140500}
INFO:root:Progress: epoch 290
INFO:root:eval: {'average_loss': 4.3186407, 'loss': 4275.886, 'global_step': 145500}
INFO:root:Progress: epoch 300
INFO:root:eval: {'average_loss': 3.3983302, 'loss': 3364.6868, 'global_step': 150500}
INFO:root:Progress: epoch 310
INFO:root:eval: {'average_loss': 4.016308, 'loss': 3976.5464, 'global_step': 155500}
INFO:root:Progress: epoch 320
INFO:root:eval: {'average_loss': 3.5207539, 'loss': 3485.8984, 'global_step': 160500}
INFO:root:Progress: epoch 330
INFO:root:eval: {'average_loss': 5.1737647, 'loss': 5122.5444, 'global_step': 165500}
INFO:root:Progress: epoch 340
INFO:root:eval: {'average_loss': 4.494054, 'loss': 4449.563, 'global_step': 170500}
INFO:root:Progress: epoch 350
INFO:root:eval: {'average_loss': 6.732246, 'loss': 6665.5967, 'global_step': 175500}
INFO:root:Progress: epoch 360
INFO:root:eval: {'average_loss': 5.2011957, 'loss': 5149.704, 'global_step': 180500}
INFO:root:Progress: epoch 370
INFO:root:eval: {'average_loss': 3.9864008, 'loss': 3946.9355, 'global_step': 185500}
INFO:root:Progress: epoch 380
INFO:root:eval: {'average_loss': 4.138097, 'loss': 4097.13, 'global_step': 190500}
INFO:root:Progress: epoch 390
INFO:root:eval: {'average_loss': 4.464204, 'loss': 4420.0083, 'global_step': 195500}
INFO:root:Progress: epoch 400
INFO:root:eval: {'average_loss': 12.8428335, 'loss': 12715.689, 'global_step': 200500}
INFO:root:Progress: epoch 410
INFO:root:eval: {'average_loss': 6.904781, 'loss': 6836.4233, 'global_step': 205500}
INFO:root:Progress: epoch 420
INFO:root:eval: {'average_loss': 4.944085, 'loss': 4895.1387, 'global_step': 210500}
INFO:root:Progress: epoch 430
INFO:root:eval: {'average_loss': 4.017741, 'loss': 3977.9656, 'global_step': 215500}
INFO:root:Progress: epoch 440
INFO:root:eval: {'average_loss': 3.6592495, 'loss': 3623.023, 'global_step': 220500}
INFO:root:Progress: epoch 450
INFO:root:eval: {'average_loss': 3.8019557, 'loss': 3764.3164, 'global_step': 225500}
INFO:root:Progress: epoch 460
INFO:root:eval: {'average_loss': 3.4944398, 'loss': 3459.845, 'global_step': 230500}
INFO:root:Progress: epoch 470
INFO:root:eval: {'average_loss': 3.354234, 'loss': 3321.0269, 'global_step': 235500}
INFO:root:Progress: epoch 480
INFO:root:eval: {'average_loss': 3.6142325, 'loss': 3578.4517, 'global_step': 240500}
INFO:root:Progress: epoch 490
INFO:root:eval: {'average_loss': 5.0265374, 'loss': 4976.7744, 'global_step': 245500}
INFO:root:Tensorflow 1.8.0
INFO:root:time: 2018-08-24_17.19.48
INFO:root:Saving to /home/hornberger/MasterarbeitTobias/models/Aug14ev/pfef16
Traceback (most recent call last):
  File "DNNRegressor-Example.py", line 410, in <module>
    tf.app.run(main)
  File "/home/hornberger/.virtualenvs/gpu-tensorflow/lib/python3.6/site-packages/tensorflow/python/platform/app.py", line 126, in run
    _sys.exit(main(argv))
  File "DNNRegressor-Example.py", line 208, in main
    decay_rate=0.96)),
  File "/home/hornberger/.virtualenvs/gpu-tensorflow/lib/python3.6/site-packages/tensorflow/python/training/learning_rate_decay.py", line 92, in exponential_decay
    raise ValueError("global_step is required for exponential_decay.")
ValueError: global_step is required for exponential_decay.
INFO:root:Tensorflow 1.8.0
INFO:root:time: 2018-08-24_17.40.27
INFO:root:Saving to /home/hornberger/MasterarbeitTobias/models/Aug14ev/pfef16
INFO:root:/home/hornberger/MasterarbeitTobias/models/Aug14ev/pfef16 does not exist. Creating folder
INFO:root:loading data from store
INFO:root:Train the DNN Regressor...

(89105, 10) (89105, 2)
(9901, 10) (9901, 2)
Traceback (most recent call last):
  File "DNNRegressor-Example.py", line 413, in <module>
    tf.app.run(main)
  File "/home/hornberger/.virtualenvs/gpu-tensorflow/lib/python3.6/site-packages/tensorflow/python/platform/app.py", line 126, in run
    _sys.exit(main(argv))
  File "DNNRegressor-Example.py", line 308, in main
    steps=STEPS_PER_EPOCH, hooks=hooks)
  File "/home/hornberger/.virtualenvs/gpu-tensorflow/lib/python3.6/site-packages/tensorflow/python/estimator/estimator.py", line 363, in train
    loss = self._train_model(input_fn, hooks, saving_listeners)
  File "/home/hornberger/.virtualenvs/gpu-tensorflow/lib/python3.6/site-packages/tensorflow/python/estimator/estimator.py", line 843, in _train_model
    return self._train_model_default(input_fn, hooks, saving_listeners)
  File "/home/hornberger/.virtualenvs/gpu-tensorflow/lib/python3.6/site-packages/tensorflow/python/estimator/estimator.py", line 856, in _train_model_default
    features, labels, model_fn_lib.ModeKeys.TRAIN, self.config)
  File "/home/hornberger/.virtualenvs/gpu-tensorflow/lib/python3.6/site-packages/tensorflow/python/estimator/estimator.py", line 831, in _call_model_fn
    model_fn_results = self._model_fn(features=features, **kwargs)
  File "/home/hornberger/.virtualenvs/gpu-tensorflow/lib/python3.6/site-packages/tensorflow/python/estimator/canned/dnn.py", line 494, in _model_fn
    config=config)
  File "/home/hornberger/.virtualenvs/gpu-tensorflow/lib/python3.6/site-packages/tensorflow/python/estimator/canned/dnn.py", line 190, in _dnn_model_fn
    logits=logits)
  File "/home/hornberger/.virtualenvs/gpu-tensorflow/lib/python3.6/site-packages/tensorflow/python/estimator/canned/head.py", line 1416, in create_estimator_spec
    global_step=training_util.get_global_step())
  File "/home/hornberger/.virtualenvs/gpu-tensorflow/lib/python3.6/site-packages/tensorflow/python/training/optimizer.py", line 424, in minimize
    name=name)
  File "/home/hornberger/.virtualenvs/gpu-tensorflow/lib/python3.6/site-packages/tensorflow/python/training/optimizer.py", line 617, in apply_gradients
    update_ops.append(processor.update_op(self, grad))
  File "/home/hornberger/.virtualenvs/gpu-tensorflow/lib/python3.6/site-packages/tensorflow/python/training/optimizer.py", line 113, in update_op
    update_op = optimizer._apply_dense(g, self._v)  # pylint: disable=protected-access
  File "/home/hornberger/.virtualenvs/gpu-tensorflow/lib/python3.6/site-packages/tensorflow/python/training/adam.py", line 152, in _apply_dense
    grad, use_locking=self._use_locking).op
  File "/home/hornberger/.virtualenvs/gpu-tensorflow/lib/python3.6/site-packages/tensorflow/python/training/gen_training_ops.py", line 230, in apply_adam
    use_nesterov=use_nesterov, name=name)
  File "/home/hornberger/.virtualenvs/gpu-tensorflow/lib/python3.6/site-packages/tensorflow/python/framework/op_def_library.py", line 350, in _apply_op_helper
    g = ops._get_graph_from_inputs(_Flatten(keywords.values()))
  File "/home/hornberger/.virtualenvs/gpu-tensorflow/lib/python3.6/site-packages/tensorflow/python/framework/ops.py", line 5637, in _get_graph_from_inputs
    _assert_same_graph(original_graph_element, graph_element)
  File "/home/hornberger/.virtualenvs/gpu-tensorflow/lib/python3.6/site-packages/tensorflow/python/framework/ops.py", line 5573, in _assert_same_graph
    original_item))
ValueError: Tensor("ExponentialDecay:0", shape=(), dtype=float32) must be from the same graph as Tensor("dnn/hiddenlayer_0/kernel/part_0:0", shape=(10, 16), dtype=float32_ref).
